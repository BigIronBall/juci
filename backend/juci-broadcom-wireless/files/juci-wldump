#!/bin/sh

. /usr/share/libubox/jshn.sh

WLDEVICES=`ip link | awk 'BEGIN { FS=": "; } /^[[:digit:]]{2}/ { if(match($2, /wl/)) print $2 }'`
json_init

json_add_array "devices"; 
for wdev in $WLDEVICES; do 
	DATA=$(wlctl -i $wdev assoc | awk 'BEGIN { 
		FS="[ \t]"; 
	} 
	{
		for(c = 0; c < NF; c++){
			if($c == "SSID:") {
				gsub(/"/, "", $(c+1)); 
				print "string|ssid=" $(c+1);
			}
			if($c == "Mode:") print "string|mode=" $(c+1); 
			if($c == "RSSI:") print "int|rssi=" $(c+1);
			if($c == "SNR:") print "int|snr=" $(c+1);
			if($c == "noise:") print "int|noise=" $(c+1);
			if($c == "Channel:") print "int|channel=" $(c+1);
			if($c == "BSSID:") print "string|bssid=" $(c+1);  
			if($c == "Rates:") {
				printf "string|rates="; 
				c+=2; 
				while($c != "]") {
					printf $(c); 
					c++; 
					if($c != "]") printf ","
				} 
				printf "\n"; 
			}
			if($c == "Chanspec:") print "string|frequency=" $(c+1);  
			if($c == "channel") print "int|channel=" $(c+1); 
			if($c == "channel:") print "int|primary_channel=" $(c+1) ;   
			if($c == "MCS") {
				printf "string|supported_channels="; 
				c+=3; 
				while($c != "]") {
					printf $(c); 
					if($c != "[" && $(c+1) != "]") printf ","
					c++; 
				} 
				printf "\n"; 
			}
		}
	}');
	
	json_add_object
	for field in $DATA; do 
		type=${field%%|*}
		nv=${field##*|}
		if [ "$type" == "string" ]; then json_add_string ${nv%=*} ${nv#*=}; fi
		if [ "$type" == "int" ]; then json_add_int ${nv%=*} ${nv#*=}; fi
	done
	json_close_object
done; 
json_close_array
json_dump
