#!/usr/bin/lua

local juci = require("juci.core");
local json = require("juci.json");

local function dir_tree(src, obj)
	local list = juci.shell("find %s -type d | sort", src);
	if(list == "") then return nil; end
	local root = { }; 
	for line in list:gmatch("[^\n\r]+") do
		local parent = root; 
		local path = "/";
		for node in line:gmatch("[^/]+") do
			path = path .. node .. "/"; 
			if not parent[node] then 
				parent[node] = { path = path, children = {} }; 
			end
			parent = parent[node].children; 
		end
	end
	return root; 
end

local function list_folders()
	local tree = dir_tree("/mnt/");
	print(json.encode(tree)); 
end
	
local function list(opts) 
	if(type(opts.path) ~= "string")
	then
		return 1;
	end
	if(opts.path:sub(1,1) == "/")
	then 
		opts.path = opts.path:sub(2);
	end
	local stdout = juci.shell("find /mnt/%s* -maxdepth 0 -type d | sed -e 's|$|/|'", opts.path);
	local result = { folders = {} }
	print(stdout);
	for line in stdout:gmatch("[^\r\n]+") do 
		table.insert(result.folders, line); 
	end 
	print(json.encode(result));
end

juci.ubus({
	["folders"] = list_folders,
	["list"] = list
}, arg);
