#!/bin/sh

. /usr/share/libubox/jshn.sh

# wireless info dump. Expected output of wlctl: 
# SSID: "MyAP"
# Mode: Managed	RSSI: 0 dBm	SNR: 0 dB	noise: -80 dBm	Channel: 1
# BSSID: 00:22:07:1E:7F:E9	Capability: ESS ShortSlot RRM 
# Supported Rates: [ 6(b) 24 54 ]
# HT Capable:
# 	Chanspec: 2.4GHz channel 1 20MHz (0x1001)
# 	Primary channel: 1
# 	HT Capabilities: 
# 	Supported MCS : [ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ]

wireless_info(){
	WLDEVICES=`ip link | awk 'BEGIN { FS=": "; } /^[[:digit:]]{2}/ { if(match($2, /wl/)) print $2 }'`
	json_init

	json_add_array "devices"; 
	for wdev in $WLDEVICES; do 
		DATA=$(wlctl -i $wdev assoc | awk 'BEGIN { 
			FS="[ \t]"; 
		} 
		{
			for(c = 0; c < NF; c++){
				if($c == "SSID:"){
					gsub(/"/, "", $(c+1)); 
					print "string|ssid=" $(c+1);
				}
				if($c == "Mode:") print "string|mode=" $(c+1); 
				if($c == "RSSI:") print "int|rssi=" $(c+1);
				if($c == "SNR:") print "int|snr=" $(c+1);
				if($c == "noise:") print "int|noise=" $(c+1);
				if($c == "Channel:") print "int|channel=" $(c+1);
				if($c == "BSSID:") print "string|bssid=" $(c+1);  
				if($c == "Rates:") {
					printf "string|rates="; 
					c+=2; 
					while($c != "]") {
						printf $(c); 
						c++; 
						if($c != "]") printf ","
					} 
					printf "\n"; 
				}
				if($c == "Chanspec:") print "string|frequency=" $(c+1);  
				if($c == "channel") print "int|channel=" $(c+1); 
				if($c == "channel:") print "int|primary_channel=" $(c+1) ;   
				if($c == "MCS") {
					printf "string|supported_channels="; 
					c+=3; 
					while($c != "]") {
						printf $(c); 
						if($c != "[" && $(c+1) != "]") printf ","
						c++; 
					} 
					printf "\n"; 
				}
			}
		}');
		
		json_add_object
		for field in $DATA; do 
			type=${field%%|*}
			nv=${field##*|}
			if [ "$type" == "string" ]; then json_add_string ${nv%=*} ${nv#*=}; fi
			if [ "$type" == "int" ]; then json_add_int ${nv%=*} ${nv#*=}; fi
		done
		json_close_object 
	done; 
	json_close_array
	json_dump
}

wireless_clients(){
	WLDEVICES=`ip link | awk 'BEGIN { FS=": "; } /^[[:digit:]]{2}/ { if(match($2, /wl/)) print $2 }'`
	
	json_init
	for wdev in $WLDEVICES; do
		CLIENTS=$(wlctl -i $wdev assoclist | cut -d' ' -f2); 
		json_add_array "clients"
		for cl in $CLIENTS; do
			RSSI=$(wlctl -i $wdev rssi $cl); 
			ARP=$(arp | grep "$cl" | awk '/[[:digit:]]/ { print "ipad
dr=" $1; print "network=" $6; }'); 
			json_add_object 
			json_add_string "macaddr" $cl
			json_add_string "device" $wdev
			json_add_int "rssi" $RSSI
			for arp in $ARP; do 
				json_add_string ${arp%=*} ${arp#*=};
			done
			json_close_object
		done
		json_close_array
	done
	json_dump
}

wireless_radios(){
	json_init
	json_dump
}

case $1 in 
	.methods) 
		echo "info,clients,radios"; 
		exit 0
		;;
	info) 
		wireless_info
		;;
	clients)
		wireless_clients
		;;
	radios)
		wireless_radios
		;;
esac
