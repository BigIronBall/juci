#!/usr/bin/lua

require("JUCI"); 

function system_filesystems(opts)
	local res = {}; 
	local lines = {}; 
	res["filesystems"] = lines; 
	local stdout = juci.shell("df | tail -n+2"); 
	for line in stdout:gmatch("[^\r\n]+") do 
		local filesystem,total,used,free,percent,path = line:match("([^%s]*)%s*([^%s]*)%s*([^%s]*)%s*([^%s]*)%s*([^%s]*)%s*([^%s]*)%s*"); 
		local obj = {
			["filesystem"] = filesystem, 
			["total"] = total, 
			["used"] = used, 
			["free"] = free,
			["path"] = path
		}; 
		table.insert(lines, obj); 
	end
	print(json.encode(res)); 
end

function system_logread(opts)
	local res = {}; 
	local lines = {}; 
	res["lines"] = lines; 
	local stdout = juci.shell("logread -l 20"); 
	for line in stdout:gmatch("[^\r\n]+") do 
		local date,type,source,message = line:match("([^%s]*%s[^%s]*%s[^%s]*%s[^%s]*%s[^%s]*)%s([^%s]*)%s([^%s:]*):%s(.*)"); 
		string.gsub(message, "\n", ""); 
		local obj = {
			["date"] = date, 
			["type"] = type, 
			["source"] = source, 
			["message"] = message
		}; 
		table.insert(lines, obj); 
	end
	print(json.encode(res)); 
end

function system_reboot()
	juci.shell("/sbin/reboot"); 
end

function system_defaultreset()
	juci.shell("/sbin/reboot"); 
end

juci.ubus({
	["log"] = system_logread, 
	["defaultreset"] = system_defaultreset,
	["filesystems"] = system_filesystems, 
	["reboot"] = system_reboot
}, arg); 

