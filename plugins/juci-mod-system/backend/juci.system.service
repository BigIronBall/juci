#!/usr/bin/lua 

local juci = require("JUCI"); 
local fs = require("fs"); 
require("ubus"); 
require("JSON"); 

local conn = ubus.connect(); 

function service_list()
	local files = fs.readdirSync("/etc/init.d/"); 
	local rcdfiles = fs.readdirSync("/etc/rc.d/"); 
	local svcs = conn:call("service", "list", {});
	local services = {}; 
	local enabled = {}; 

	for _,file in ipairs(rcdfiles) do 
		if(file:sub(1,1) == "S") then 
			enabled[string.sub(file, 4, file:len())] = tonumber(file:sub(2,3)); 
		end
	end
	for _,file in ipairs(files) do
		local svc = {
			running = false, 
			enabled = false
		}; 
		local s = svcs[file]; 
		
		svc.start_priority = enabled[file]; 
		svc.enabled = enabled[file] ~= nil; 
		svc.running = s ~= nil; 		
		svc.name = file; 
		
		table.insert(services, svc); 
	end
	print(json.encode({services = services})); 
end

function service_start(service) 
	juci.shell("/etc/init.d/"..service.name.." start");
	print('{}');
end 

function service_stop(service)
	juci.shell("/etc/init.d/"..service.name.." stop");
	print('{}');
end 

function service_enable(service)
	juci.shell("/etc/init.d/"..service.name.." enable");
	print('{}');
end

function service_disable(service)
	juci.shell("/etc/init.d/"..service.name.." disable");
	print('{}');

end

function service_reload(service)
	juci.shell("/etc/init.d/"..service.name.." reload");
	print('{}');
end

function service_status(service)
	--TODO fix this
	print({});
end

juci.ubus({
	["list"] = service_list,
	["start"] = service_start,
	["stop"] = service_stop, 
	["enable"] = service_enable, 
	["disable"] = service_disable, 
	["reload"] = service_reload, 
	["status"] = service_status
}, arg); 
