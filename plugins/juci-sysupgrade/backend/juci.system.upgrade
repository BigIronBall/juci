#!/usr/bin/lua

require("JUCI"); 

function sysupgrade_check(params)
	local type = "usb"; 
	if params["type"] == "online" then type = "online"; end;
	local res = {}; 
	res["stdout"] = juci.shell("sysupgrade %s".."--"..type);  
	print(json.encode(res)); 
end

function sysupgrade_test(params)
	local res = {}; 
	local path = "/tmp/firmware.bin"; 
	if params["path"] then path = params["path"] end
	res["stdout"] = juci.shell("sysupgrade --test %s", path); 
	print(json.encode(res)); 
end

function sysupgrade_start(params)
	local res = {}; 
	local path = "/tmp/firmware.bin"; 
	local keep = ""; 
	if params["keep"] ~= 1 then keep = "-n" end
	if params["path"] then path = params["path"] end
	res["stdout"] = juci.shell("sysupgrade "..keep.." %s", path); 
	print(json.encode(res)); 
end

function sysupgrade_clean()
	local res = {}; 
	res["stdout"] = juci.shell("sysupgrade --clean"); 
	print(json.encode(res)); 
end

juci.ubus({
	["check"] = sysupgrade_check, 
	["test"] = sysupgrade_test, 
	["start"] = sysupgrade_start,
	["clean"] = sysupgrade_clean
}, arg); 

